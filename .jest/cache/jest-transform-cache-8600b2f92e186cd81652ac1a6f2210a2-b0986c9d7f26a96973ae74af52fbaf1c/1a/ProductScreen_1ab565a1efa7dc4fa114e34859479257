528dd63a118516e83c0320a728856a18
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importStar(require("react"));

var react_native_1 = require("react-native");

var no_image_png_1 = __importDefault(require("./no-image.png"));

var theme_1 = __importDefault(require("theme"));

var components_1 = require("components");

var react_native_gesture_handler_1 = require("react-native-gesture-handler");

var context_1 = __importDefault(require("modules/checkout/context"));

function ProductScreen(_ref) {
  var _product$image, _product$parameters;

  var route = _ref.route;
  var product = route.params;

  var _react_1$useState = react_1.useState('1'),
      _react_1$useState2 = (0, _slicedToArray2.default)(_react_1$useState, 2),
      quantity = _react_1$useState2[0],
      setQuantity = _react_1$useState2[1];

  var numQuantity = parseInt(quantity);
  var price = Number.isNaN(numQuantity) ? product.price : numQuantity * product.price;

  var _react_1$useContext = react_1.useContext(context_1.default),
      addItem = _react_1$useContext.addItem;

  return React.createElement(react_native_1.SafeAreaView, {
    style: {
      flex: 1
    }
  }, React.createElement(react_native_1.ScrollView, {
    style: styles.screen
  }, React.createElement(react_native_1.View, {
    style: styles.header
  }, React.createElement(react_native_1.Image, {
    source: {
      uri: (_product$image = product.image) != null ? _product$image : no_image_png_1.default
    },
    style: styles.image
  }), React.createElement(react_native_1.Text, {
    style: styles.title
  }, product.title), React.createElement(react_native_1.View, {
    style: styles.priceBlock
  }, React.createElement(react_native_gesture_handler_1.TextInput, {
    style: styles.input,
    value: quantity,
    onChangeText: setQuantity
  }), React.createElement(react_native_1.Text, {
    style: styles.price
  }, React.createElement(react_native_1.Text, {
    style: {
      fontWeight: 'bold'
    }
  }, price), " kr"), React.createElement(components_1.Button, {
    style: {
      flex: 0.5
    },
    onPress: function onPress() {
      return addItem(product, numQuantity);
    }
  }, React.createElement(react_native_1.Text, null, "Add to cart ")))), React.createElement(react_native_1.Text, {
    style: styles.description
  }, product.description), Boolean(product.parameters) && React.createElement(react_native_1.View, {
    style: styles.table
  }, (_product$parameters = product.parameters) == null ? void 0 : _product$parameters.map(function (_ref2, i) {
    var label = _ref2.label,
        value = _ref2.value;
    return React.createElement(react_native_1.View, {
      key: i,
      style: styles.tableRow
    }, React.createElement(react_native_1.Text, {
      style: styles.tableHeader
    }, label), React.createElement(react_native_1.Text, {
      style: styles.tableCell
    }, value));
  }))));
}

exports.default = ProductScreen;
var styles = react_native_1.StyleSheet.create({
  screen: {
    flex: 1
  },
  header: {
    paddingHorizontal: 32,
    paddingVertical: 16,
    backgroundColor: theme_1.default.colors.card
  },
  image: {
    width: '100%',
    aspectRatio: 16 / 9
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginTop: 8,
    marginBottom: 16
  },
  description: {
    marginTop: 16,
    marginBottom: 16,
    paddingHorizontal: 32
  },
  priceBlock: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center'
  },
  input: {
    borderWidth: 1,
    paddingVertical: 8,
    paddingHorizontal: 16,
    flex: 0.15,
    textAlign: 'center',
    color: theme_1.default.colors.text,
    borderColor: theme_1.default.colors.border
  },
  price: {
    flex: 0.35,
    color: theme_1.default.colors.text,
    fontSize: 18,
    paddingVertical: 8,
    paddingHorizontal: 16
  },
  table: {
    marginHorizontal: 32
  },
  tableRow: {
    marginBottom: 4,
    flexDirection: 'row'
  },
  tableHeader: {
    color: 'white',
    backgroundColor: theme_1.default.colors.primary,
    flex: 0.5,
    paddingHorizontal: 16,
    paddingVertical: 8,
    fontWeight: 'bold'
  },
  tableCell: {
    marginLeft: 4,
    flex: 0.5,
    backgroundColor: theme_1.default.colors.card,
    paddingHorizontal: 16,
    paddingVertical: 8
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,