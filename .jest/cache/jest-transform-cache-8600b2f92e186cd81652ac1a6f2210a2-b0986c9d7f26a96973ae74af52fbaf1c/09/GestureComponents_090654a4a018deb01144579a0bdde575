40821221587c11aa4421cf0be949b23d
"use strict";var _react = _interopRequireDefault(require("react"));
var _reactNative = _interopRequireDefault(require("react-native"));

var _createNativeWrapper = _interopRequireDefault(require("./createNativeWrapper"));var _jsxFileName = "/Users/valeriavianagusmao/git/store/node_modules/react-native-gesture-handler/GestureComponents.js";function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

var MEMOIZED = new WeakMap();

function memoizeWrap(Component, config) {
  if (Component == null) {
    return null;
  }
  var memoized = MEMOIZED.get(Component);
  if (!memoized) {
    memoized = (0, _createNativeWrapper.default)(Component, config);
    MEMOIZED.set(Component, memoized);
  }
  return memoized;
}

module.exports = {

  get ScrollView() {
    return memoizeWrap(_reactNative.default.ScrollView, {
      disallowInterruption: true,
      shouldCancelWhenOutside: false });

  },
  get Switch() {
    return memoizeWrap(_reactNative.default.Switch, {
      shouldCancelWhenOutside: false,
      shouldActivateOnStart: true,
      disallowInterruption: true });

  },
  get TextInput() {
    return memoizeWrap(_reactNative.default.TextInput);
  },
  get DrawerLayoutAndroid() {
    var DrawerLayoutAndroid = memoizeWrap(_reactNative.default.DrawerLayoutAndroid, {
      disallowInterruption: true });

    DrawerLayoutAndroid.positions = _reactNative.default.DrawerLayoutAndroid.positions;
    return DrawerLayoutAndroid;
  },
  get FlatList() {var _this = this;
    if (!MEMOIZED.FlatList) {
      var ScrollView = this.ScrollView;
      MEMOIZED.FlatList = _react.default.forwardRef(function (props, ref) {return (
          _react.default.createElement(_reactNative.default.FlatList, _extends({
            ref: ref },
          props, {
            renderScrollComponent: function renderScrollComponent(scrollProps) {return _react.default.createElement(ScrollView, _extends({}, scrollProps, { __self: _this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 49 } }));}, __self: _this, __source: { fileName: _jsxFileName, lineNumber: 49, columnNumber: 9 } })));});


    }
    return MEMOIZED.FlatList;
  } };