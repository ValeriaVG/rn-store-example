f5ba51ab5a08b114208e90ab3f761460
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;









var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");var _jsxFileName = "/Users/valeriavianagusmao/git/store/node_modules/@react-native-community/masked-view/js/MaskedView.js";function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = _getPrototypeOf(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return _possibleConstructorReturn(this, result);};}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}

var RNCMaskedView = (0, _reactNative.requireNativeComponent)('RNCMaskedView');var








































MaskedView = function (_React$Component) {_inherits(MaskedView, _React$Component);var _super = _createSuper(MaskedView);function MaskedView() {var _this;_classCallCheck(this, MaskedView);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _super.call.apply(_super, [this].concat(args));_this.
    _hasWarnedInvalidRenderMask = false;return _this;}_createClass(MaskedView, [{ key: "render", value: function render()

    {var _this$props =
      this.props,maskElement = _this$props.maskElement,children = _this$props.children,otherViewProps = _objectWithoutProperties(_this$props, ["maskElement", "children"]);

      if (!_react.default.isValidElement(maskElement)) {
        if (!this._hasWarnedInvalidRenderMask) {
          console.warn(
          'MaskedView: Invalid `maskElement` prop was passed to MaskedView. ' +
          'Expected a React Element. No mask will render.');

          this._hasWarnedInvalidRenderMask = true;
        }

        return _react.default.createElement(_reactNative.View, _extends({}, otherViewProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 70, columnNumber: 14 } }), children);
      }

      return (
        _react.default.createElement(RNCMaskedView, _extends({}, otherViewProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 74, columnNumber: 7 } }),
        _react.default.createElement(_reactNative.View, { pointerEvents: "none", style: _reactNative.StyleSheet.absoluteFill, __self: this, __source: { fileName: _jsxFileName, lineNumber: 75, columnNumber: 9 } },
        maskElement),

        children));


    } }]);return MaskedView;}(_react.default.Component);exports.default = MaskedView;